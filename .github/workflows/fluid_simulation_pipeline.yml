name: Fluid Data Processing and Commit

on:
  push:
    branches:
      - "**" # Triggers on any branch push
  workflow_dispatch: # Allows manual trigger from the GitHub Actions UI

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest # Uses the latest Ubuntu runner provided by GitHub Actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 # Clones your repository into the runner

      # --- Blender 4 Setup ---
      - name: Download and Extract Blender 4
        id: setup-blender
        run: |
          BLENDER_VERSION="4.0.2"
          BLENDER_FILE="blender-${BLENDER_VERSION}-linux-x64.tar.xz"
          BLENDER_URL="https://download.blender.org/release/Blender${BLENDER_VERSION%.*}/${BLENDER_FILE}"
          
          echo "Downloading Blender from: ${BLENDER_URL}"
          wget -q ${BLENDER_URL} 
          tar -xf ${BLENDER_FILE} 
          
          EXTRACTED_BLENDER_ROOT=$(pwd)/blender-${BLENDER_VERSION}-linux-x64
          
          echo "BLENDER_DIR=${EXTRACTED_BLENDER_ROOT}" >> "$GITHUB_OUTPUT"
          echo "Blender extracted to: ${EXTRACTED_BLENDER_ROOT}"

      - name: Install Python dependencies for Blender
        run: |
          BLENDER_ROOT_DIR="${{ steps.setup-blender.outputs.BLENDER_DIR }}"

          BLENDER_PYTHON=""
          if [ -f "${BLENDER_ROOT_DIR}/python/bin/python3.11" ]; then
              BLENDER_PYTHON="${BLENDER_ROOT_DIR}/python/bin/python3.11"
          elif [ -f "${BLENDER_ROOT_DIR}/python/bin/python" ]; then
              BLENDER_PYTHON="${BLENDER_ROOT_DIR}/python/bin/python"
          else
              echo "❌ Error: Blender's Python executable not found!"
              exit 1
          fi
          
          echo "Using Blender's Python interpreter: ${BLENDER_PYTHON}"
          ${BLENDER_PYTHON} -m ensurepip --default-pip
          ${BLENDER_PYTHON} -m pip install numpy

      - name: Set up Python for other scripts
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libtbb-dev 

      - name: Install base Python dependencies
        run: |
          pip install --upgrade h5py scipy pytest
          pip install -r requirements.txt

      - name: Debug Repository Structure
        run: ls -R "$GITHUB_WORKSPACE"

      - name: Verify Blender Script Exists
        run: |
          if [ ! -f "$GITHUB_WORKSPACE/src/generate_blender_format.py" ]; then
            echo "❌ Error: generate_blender_format.py not found in src directory!"
            exit 1
          fi

      - name: Run Blender Scene Assembly Script
        run: |
          BLENDER_EXEC="${{ steps.setup-blender.outputs.BLENDER_DIR }}/blender"
          PYTHON_SCRIPT="$GITHUB_WORKSPACE/src/generate_blender_format.py"
          echo "Running Blender script: ${PYTHON_SCRIPT} using ${BLENDER_EXEC}"
          ${BLENDER_EXEC} --background --python "${PYTHON_SCRIPT}"

      - name: Commit and Push Final Blender Assembly Output
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"

          cd "$GITHUB_WORKSPACE"
          OUTPUT_BLEND_FILE="data/testing-input-output/output/final_animation_scene.blend"

          if [ -f "${OUTPUT_BLEND_FILE}" ]; then
            git add "${OUTPUT_BLEND_FILE}"
            git status
            if [[ $(git diff --cached --quiet; echo $?) -ne 0 ]]; then
              git commit -m "Auto-update: Final Blender 4 scene assembly completed"
              git push origin HEAD
            else
              echo "✅ No changes to commit!"
            fi
          else
            echo "❌ No Blender output file detected, skipping commit."
          fi
